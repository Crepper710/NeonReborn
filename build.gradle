buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven { url 'https://maven.minecraftforge.net/' }
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
        classpath "org.reflections:reflections:0.10.2"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

version = "1.0.0"
group = "io.github.crepper710.neon_reborn"
archivesBaseName = "Neon Reborn"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

dependencies {
    compile("org.spongepowered:mixin:0.6.4-SNAPSHOT") {
        exclude module: "launchwrapper"
    }
    implementation 'org.jetbrains:annotations:15.0'
    implementation 'org.reflections:reflections:0.10.2'
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.3.72'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, "mixins.neon_reborn.refmap.json"
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('org.jetbrains:annotations'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib'))
        include(dependency('org.reflections:reflections'))
    }

    exclude 'dummyThing'
    exclude 'LICENSE.txt'

    classifier = ''
}

build.dependsOn(shadowJar)

jar {
    manifest.attributes(
            "MixinConfigs": 'mixins.clientbase.json',
            "tweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
            "TweakOrder": 0,
            "FMLCorePluginContainsFMLMod": 'io.github.crepper710.neon_reborn.injection.MixinLoader'
    )
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

configurations {
    mods
    shade
    compile.extendsFrom shade
}

reobf { shadowJar { mappingType = 'SEARGE' } }
tasks.reobfShadowJar.mustRunAfter shadowJar

apply plugin: "idea"

idea {
    module {
        inheritOutputDirs = true
    }
}